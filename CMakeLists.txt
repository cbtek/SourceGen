#####################################################
#!This file is autogenerated by the CBTek Code Base Manager
#####################################################

cmake_minimum_required(VERSION 2.8.12)
project(SourceGen)

add_definitions(-std=c++11)
if (WIN32)
    if (MSVC)

    else()
        set(CMAKE_CXX_FLAGS_RELEASE "-g -Wl,--no-as-needed -std=c++11 -D_GLIBCXX_USE_CXX11_ABI=0")
        set(CMAKE_CXX_FLAGS_DEBUG "-g -Wl,--no-as-needed -std=c++11  -D_GLIBCXX_USE_CXX11_ABI=0")
    endif()

else()
    set(CMAKE_CXX_FLAGS_RELEASE "-g -Wl,--no-as-needed -std=c++11 -pthread -fPIC -ldl -D_GLIBCXX_USE_CXX11_ABI=0")
    set(CMAKE_CXX_FLAGS_DEBUG "-g -Wl,--no-as-needed -std=c++11 -pthread -fPIC -ldl -D_GLIBCXX_USE_CXX11_ABI=0")

endif()

set(LIBRARY_TYPE STATIC)

get_filename_component(PROJECT_ROOT ${CMAKE_CURRENT_BINARY_DIR} PATH)

set (ENABLE_COMMON_UTILS_UNIT_TESTS ON)

if (WIN32)
    set (PLATFORM WIN32)
endif()

IF(CMAKE_BUILD_TYPE MATCHES DEBUG)
        set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_ROOT}/bin/debug")
        set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_ROOT}/bin/debug")
        set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_ROOT}/bin/debug")
ELSE()
        set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_ROOT}/bin/release")
        set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_ROOT}/bin/release")
        set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_ROOT}/bin/release")
ENDIF()

include_directories("${PROJECT_SOURCE_DIR}/common")
add_subdirectory("${PROJECT_SOURCE_DIR}/common/utility")
add_subdirectory("${PROJECT_SOURCE_DIR}/products/SourceGen")
